name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        
    - name: Run ESLint security rules
      run: npx eslint . --ext .ts,.tsx --config .eslintrc.security.js
      
    - name: Check for hardcoded secrets
      run: |
        if grep -r "api_key\|secret\|password\|token" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules .; then
          echo "Found potential hardcoded secrets!"
          exit 1
        fi
        
    - name: Validate environment variables
      run: |
        if [ -f .env ]; then
          echo "ERROR: .env file should not be committed!"
          exit 1
        fi
        
    - name: Check for premium code in open source
      run: |
        if find . -name "*premium*" -o -name "*enterprise*" -o -name "*business-model*" | grep -v node_modules | grep -v .git; then
          echo "ERROR: Premium/Enterprise code found in open source!"
          exit 1
        fi
        
    - name: License compliance check
      run: |
        npx license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;AGPL-3.0"
        
    - name: SAST with CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: typescript, javascript
        
    - name: Build for analysis
      run: npm run build
      
    - name: Run CodeQL analysis
      uses: github/codeql-action/analyze@v3